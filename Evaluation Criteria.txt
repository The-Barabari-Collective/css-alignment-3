Evaluation Criteria

HTML Structure and Semantics (20 points)
- Check if the HTML tags are properly nested and closed.
- Verify the use of semantic tags like <section>, <footer>, and <nav>.
- Ensure all images have alt attributes for accessibility.
- Look for a logical structure in the HTML document (e.g., header, main content, footer).

CSS Basics and Styling (20 points)
- Check if the CSS is well-organized and uses proper selectors.
- Verify the use of CSS variables for consistent styling.
- Ensure the design is visually appealing (e.g., proper spacing, colors, and fonts).
- Avoid inline styles in the HTML file.

Responsiveness (20 points)
- Test the layout on different screen sizes (mobile, tablet, desktop).
- Check if media queries are used to adjust the design for smaller screens.
- Ensure no elements overlap or break on smaller devices.

Functionality (20 points)
- Test all links and buttons to ensure they work as expected.
- Verify that the form fields (email, text, dropdown, textarea) are functional and required.
- Check if external links (e.g., social media) open in a new tab.

Code Readability and Comments (20 points)
- Check if the code is properly indented and easy to read.
- Look for comments explaining sections of the code.
- Ensure consistent naming conventions for classes and IDs.

Scoring Example
Criteria                Points (Max)    Score Given
HTML Structure and Semantics    20      18
CSS Basics and Styling          20      16
Responsiveness                  20      15
Functionality                   20      19
Code Readability and Comments   20      17
Total                           100     85



How to Evaluate

HTML Structure and Semantics
1. Open the HTML file in a code editor.
2. Look for proper nesting of tags and the use of semantic elements.
3. Check if all images have meaningful alt attributes.

CSS Basics and Styling
1. Open the CSS file and review the use of selectors and properties.
2. Check if CSS variables are used for colors, fonts, and spacing.
3. Open the webpage in a browser and evaluate the visual design.

Responsiveness
1. Resize the browser window to test the layout on different screen sizes.
2. Use browser developer tools to simulate mobile and tablet views.
3. Look for any broken or overlapping elements.

Functionality
1. Click on all links and buttons to ensure they work.
2. Test the form by filling out the fields and submitting it.
3. Verify that external links open in a new tab.

Code Readability and Comments
1. Review the code for proper indentation and spacing.
2. Look for comments explaining the purpose of different sections.
3. Check if class and ID names are meaningful and consistent.
